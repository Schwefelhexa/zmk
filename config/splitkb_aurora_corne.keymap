#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"                // keyposition helpers
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

&mt {
  flavor = "tap-preferred";
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
        behaviors {
          hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <175>;
            require-prior-idle-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };
        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            // require-prior-idle-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            // hold-trigger-on-release;             // requires PR #1423
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            // require-prior-idle-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;             // requires PR #1423
        };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &none
   &none &hm_l LCTRL A &hm_l LALT S &hm_l LGUI D &hm_shift_l LSHIFT F &hm_l RALT G   &hm_r RALT H &hm_shift_r LSHIFT J  &hm_r LGUI K     &hm_r LALT L   &hm_r LCTRL SEMI &none
   &none &kp Z &kp X &kp C &hm_l LC(LA(LSHIFT)) V &kp B   &kp N &hm_r LC(LA(LSHIFT)) M  &kp COMMA &kp DOT &kp FSLH &none
               &none &lt LOWER SPACE &kp BKSP   &kp RET &lt RAISE ESC &none
                        >;
								};

								lower {
												bindings = <
	 &none &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &none 
	 &none &kp 1 &kp 2 &kp 3 &kp 4 &kp 5 &kp 6   &kp 7 &kp 8 &kp 9 &kp 0 &none
	 &none &trans &trans &trans &kp , &trans   &trans &kp . &trans &trans &trans &none 
								&none &trans &trans    &trans &trans &none
												>;
								};

								raise {
												bindings = <
	 &none &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &none 
	 &none &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &none
	 &none &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &none 
								&none &trans &trans    &trans &trans &none
												>;
								};
					};
};

